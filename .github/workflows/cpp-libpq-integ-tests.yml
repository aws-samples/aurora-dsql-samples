name: C++ libpq integration tests

on:
  push:
    branches: [ main ]
    paths:
      - 'cpp/libpq/**'
      - '.github/workflows/cpp-libpq-integ-tests.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'cpp/libpq/**'
      - '.github/workflows/cpp-libpq-integ-tests.yml'
  # Give us a button to allow running the workflow on demand for testing.
  workflow_dispatch:
    inputs:
      tags:
        description: 'Manual Workflow Run'
        required: false
        type: string
 
jobs:
  cpp-libpq-integ-test:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      # Explicitly set permissions, following the principle of least privilege
      actions: read
      checks: write
      pull-requests: write
    concurrency:
      # Ensure only 1 job uses the workflow cluster at a time.
      group: ${{ github.workflow }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install build tools
      run: |
        sudo apt-get update 
        sudo apt-get install build-essential
    
    - name: Install needed packages
      run: sudo apt-get install libcurl4-openssl-dev libssl-dev uuid-dev zlib1g-dev

    - name: Install git
      run: sudo apt-get install git

    - name: Install cmake
      run: sudo apt-get install cmake
    
    - name: Install libpq
      run: sudo apt-get install libpq-dev

    - name: Build aws-sdk-cpp
      working-directory: ./cpp/libpq
      run: |
        git clone --recurse-submodules https://github.com/aws/aws-sdk-cpp
        mkdir aws-sdk-build
        mkdir aws-sdk-install
        cd aws-sdk-build
        cmake ../aws-sdk-cpp -DCMAKE_BUILD_TYPE=Release -DENABLE_TESTING=OFF -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/cpp/libpq/aws-sdk-install -DBUILD_ONLY="dsql"
        cmake --build . --config=Release --parallel $(nproc)
        cmake --install . --config=Release

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.CPP_IAM_ROLE }}
        aws-region: us-east-1

    - name: Build sample 
      working-directory: ./cpp/libpq/src
      run: make libpq_example_ubuntu

    - name: Configure and run integration for cpp libpq
      working-directory: ./cpp/libpq/src
      env:
        CLUSTER_ENDPOINT: ${{ secrets.CPP_LIBPQ_CLUSTER_ENDPOINT }}
        REGION: ${{ secrets.CPP_LIBPQ_CLUSTER_REGION }}
        CLUSTER_USER: admin
        LD_LIBRARY_PATH: /lib/x86_64-linux-gnu:/home/runner/work/aurora-dsql-samples/aurora-dsql-samples/cpp/libpq/aws-sdk-install/lib
      run: |
        wget https://www.amazontrust.com/repository/AmazonRootCA1.pem -O root.pem
        ./libpq_example