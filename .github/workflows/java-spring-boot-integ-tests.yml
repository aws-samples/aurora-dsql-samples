name: Java Spring Boot integration tests

permissions: { }

on:
  push:
    branches: [ main ]
    paths:
      - "java/spring_boot/**"
      - ".github/workflows/java-spring-boot-integ-tests.yml"
  pull_request:
    branches: [ main ]
    paths:
      - "java/spring_boot/**"
      - ".github/workflows/java-spring-boot-integ-tests.yml"
  workflow_dispatch:

jobs:
  test-maven:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # required by aws-actions/configure-aws-credentials
    concurrency:
      group: ${{ github.workflow }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: "17"
          distribution: "corretto"
          architecture: x64
          cache: maven

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: ${{ secrets.JAVA_IAM_ROLE }}
          aws-region: us-east-1

      - name: Run Maven integration test
        working-directory: ./java/spring_boot
        env:
          CLUSTER_USER: admin
          CLUSTER_ENDPOINT: ${{ secrets.JAVA_SPRING_BOOT_CLUSTER_ENDPOINT }}
          REGION: ${{ secrets.JAVA_SPRING_BOOT_CLUSTER_REGION }}
          EXIT_AFTER_TEST: true
        run: mvn spring-boot:run

  test-gradle:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # required by aws-actions/configure-aws-credentials
    concurrency:
      group: ${{ github.workflow }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: "17"
          distribution: "corretto"
          architecture: x64
          cache: gradle

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: ${{ secrets.JAVA_IAM_ROLE }}
          aws-region: us-east-1

      - name: Run Gradle integration test
        working-directory: ./java/spring_boot
        env:
          CLUSTER_USER: admin
          CLUSTER_ENDPOINT: ${{ secrets.JAVA_SPRING_BOOT_CLUSTER_ENDPOINT }}
          REGION: ${{ secrets.JAVA_SPRING_BOOT_CLUSTER_REGION }}
          EXIT_AFTER_TEST: true
        run: ./gradlew bootRun
